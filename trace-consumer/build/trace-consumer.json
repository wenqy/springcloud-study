{"@timestamp":"2020-01-13T08:11:55.540Z","severity":"INFO","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"8360","thread":"main","class":"o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","rest":"Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"}
{"@timestamp":"2020-01-13T08:12:02.412Z","severity":"INFO","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"8360","thread":"main","class":"com.wenqy.trace.TraceConsumerApplication","rest":"No active profile set, falling back to default profiles: default"}
{"@timestamp":"2020-01-13T08:12:03.321Z","severity":"WARN","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"8360","thread":"main","class":"o.s.boot.actuate.endpoint.EndpointId","rest":"Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format."}
{"@timestamp":"2020-01-13T08:12:03.766Z","severity":"INFO","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"8360","thread":"main","class":"o.s.cloud.context.scope.GenericScope","rest":"BeanFactory id=6e1f05be-b73e-3ef5-8f5d-8f0b22d5e65f"}
{"@timestamp":"2020-01-13T08:12:04.525Z","severity":"INFO","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"8360","thread":"main","class":"o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","rest":"Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"}
{"@timestamp":"2020-01-13T08:12:06.495Z","severity":"INFO","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"8360","thread":"main","class":"o.s.b.w.embedded.tomcat.TomcatWebServer","rest":"Tomcat initialized with port(s): 8070 (http)"}
{"@timestamp":"2020-01-13T08:12:06.559Z","severity":"INFO","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"8360","thread":"main","class":"org.apache.catalina.core.StandardService","rest":"Starting service [Tomcat]"}
{"@timestamp":"2020-01-13T08:12:06.559Z","severity":"INFO","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"8360","thread":"main","class":"org.apache.catalina.core.StandardEngine","rest":"Starting Servlet engine: [Apache Tomcat/9.0.29]"}
{"@timestamp":"2020-01-13T08:12:06.896Z","severity":"INFO","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"8360","thread":"main","class":"o.a.c.c.C.[Tomcat].[localhost].[/]","rest":"Initializing Spring embedded WebApplicationContext"}
{"@timestamp":"2020-01-13T08:12:06.896Z","severity":"INFO","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"8360","thread":"main","class":"o.s.web.context.ContextLoader","rest":"Root WebApplicationContext: initialization completed in 4469 ms"}
{"@timestamp":"2020-01-13T08:12:07.173Z","severity":"WARN","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"8360","thread":"main","class":"c.n.c.sources.URLConfigurationSource","rest":"No URLs will be polled as dynamic configuration sources."}
{"@timestamp":"2020-01-13T08:12:07.174Z","severity":"INFO","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"8360","thread":"main","class":"c.n.c.sources.URLConfigurationSource","rest":"To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath."}
{"@timestamp":"2020-01-13T08:12:07.237Z","severity":"INFO","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"8360","thread":"main","class":"c.netflix.config.DynamicPropertyFactory","rest":"DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@71b97eeb"}
{"@timestamp":"2020-01-13T08:12:10.842Z","severity":"WARN","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"8360","thread":"main","class":"c.n.c.sources.URLConfigurationSource","rest":"No URLs will be polled as dynamic configuration sources."}
{"@timestamp":"2020-01-13T08:12:10.843Z","severity":"INFO","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"8360","thread":"main","class":"c.n.c.sources.URLConfigurationSource","rest":"To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath."}
{"@timestamp":"2020-01-13T08:12:11.438Z","severity":"INFO","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"8360","thread":"main","class":"o.s.s.concurrent.ThreadPoolTaskExecutor","rest":"Initializing ExecutorService 'applicationTaskExecutor'"}
{"@timestamp":"2020-01-13T08:12:15.083Z","severity":"WARN","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"8360","thread":"main","class":"o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger","rest":"You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project."}
{"@timestamp":"2020-01-13T08:12:15.245Z","severity":"WARN","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"8360","thread":"main","class":"o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger","rest":"Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath."}
{"@timestamp":"2020-01-13T08:12:15.563Z","severity":"WARN","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"8360","thread":"main","class":"o.s.c.s.e.EurekaStarterDeprecationWarningAutoConfiguration","rest":"spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka"}
{"@timestamp":"2020-01-13T08:12:15.584Z","severity":"INFO","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"8360","thread":"main","class":"o.s.b.a.e.web.EndpointLinksResolver","rest":"Exposing 2 endpoint(s) beneath base path '/actuator'"}
{"@timestamp":"2020-01-13T08:12:15.648Z","severity":"INFO","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"8360","thread":"main","class":"o.s.c.netflix.eureka.InstanceInfoFactory","rest":"Setting initial instance status as: STARTING"}
{"@timestamp":"2020-01-13T08:12:15.991Z","severity":"INFO","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"8360","thread":"main","class":"com.netflix.discovery.DiscoveryClient","rest":"Initializing Eureka in region us-east-1"}
{"@timestamp":"2020-01-13T08:12:16.435Z","severity":"INFO","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"8360","thread":"main","class":"c.n.d.provider.DiscoveryJerseyProvider","rest":"Using JSON encoding codec LegacyJacksonJson"}
{"@timestamp":"2020-01-13T08:12:16.436Z","severity":"INFO","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"8360","thread":"main","class":"c.n.d.provider.DiscoveryJerseyProvider","rest":"Using JSON decoding codec LegacyJacksonJson"}
{"@timestamp":"2020-01-13T08:12:16.782Z","severity":"INFO","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"8360","thread":"main","class":"c.n.d.provider.DiscoveryJerseyProvider","rest":"Using XML encoding codec XStreamXml"}
{"@timestamp":"2020-01-13T08:12:16.783Z","severity":"INFO","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"8360","thread":"main","class":"c.n.d.provider.DiscoveryJerseyProvider","rest":"Using XML decoding codec XStreamXml"}
{"@timestamp":"2020-01-13T08:12:17.151Z","severity":"INFO","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"8360","thread":"main","class":"c.n.d.s.r.aws.ConfigClusterResolver","rest":"Resolving eureka endpoints via configuration"}
{"@timestamp":"2020-01-13T08:12:18.406Z","severity":"INFO","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"8360","thread":"main","class":"com.netflix.discovery.DiscoveryClient","rest":"Disable delta property : false"}
{"@timestamp":"2020-01-13T08:12:18.406Z","severity":"INFO","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"8360","thread":"main","class":"com.netflix.discovery.DiscoveryClient","rest":"Single vip registry refresh property : null"}
{"@timestamp":"2020-01-13T08:12:18.407Z","severity":"INFO","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"8360","thread":"main","class":"com.netflix.discovery.DiscoveryClient","rest":"Force full registry fetch : false"}
{"@timestamp":"2020-01-13T08:12:18.407Z","severity":"INFO","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"8360","thread":"main","class":"com.netflix.discovery.DiscoveryClient","rest":"Application is null : false"}
{"@timestamp":"2020-01-13T08:12:18.407Z","severity":"INFO","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"8360","thread":"main","class":"com.netflix.discovery.DiscoveryClient","rest":"Registered Applications size is zero : true"}
{"@timestamp":"2020-01-13T08:12:18.407Z","severity":"INFO","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"8360","thread":"main","class":"com.netflix.discovery.DiscoveryClient","rest":"Application version is -1: true"}
{"@timestamp":"2020-01-13T08:12:18.407Z","severity":"INFO","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"8360","thread":"main","class":"com.netflix.discovery.DiscoveryClient","rest":"Getting all instance registry info from the eureka server"}
{"@timestamp":"2020-01-13T08:12:18.577Z","severity":"INFO","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"8360","thread":"main","class":"com.netflix.discovery.DiscoveryClient","rest":"The response status is 200"}
{"@timestamp":"2020-01-13T08:12:18.579Z","severity":"INFO","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"8360","thread":"main","class":"com.netflix.discovery.DiscoveryClient","rest":"Starting heartbeat executor: renew interval is: 10"}
{"@timestamp":"2020-01-13T08:12:18.582Z","severity":"INFO","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"8360","thread":"main","class":"c.n.discovery.InstanceInfoReplicator","rest":"InstanceInfoReplicator onDemand update allowed rate per min is 4"}
{"@timestamp":"2020-01-13T08:12:18.602Z","severity":"INFO","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"8360","thread":"main","class":"com.netflix.discovery.DiscoveryClient","rest":"Discovery Client initialized at timestamp 1578903138587 with initial instances count: 0"}
{"@timestamp":"2020-01-13T08:12:18.615Z","severity":"INFO","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"8360","thread":"main","class":"o.s.c.n.e.s.EurekaServiceRegistry","rest":"Registering application TRACE-CONSUMER with eureka with status UP"}
{"@timestamp":"2020-01-13T08:12:18.617Z","severity":"INFO","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"8360","thread":"main","class":"com.netflix.discovery.DiscoveryClient","rest":"Saw local status change event StatusChangeEvent [timestamp=1578903138617, current=UP, previous=STARTING]"}
{"@timestamp":"2020-01-13T08:12:18.621Z","severity":"WARN","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"8360","thread":"main","class":"c.n.discovery.InstanceInfoReplicator","rest":"Ignoring onDemand update due to rate limiter"}
{"@timestamp":"2020-01-13T08:12:18.626Z","severity":"INFO","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"8360","thread":"DiscoveryClient-InstanceInfoReplicator-0","class":"com.netflix.discovery.DiscoveryClient","rest":"DiscoveryClient_TRACE-CONSUMER/hello-world:trace-consumer:8070: registering service..."}
{"@timestamp":"2020-01-13T08:12:18.757Z","severity":"INFO","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"8360","thread":"DiscoveryClient-InstanceInfoReplicator-0","class":"com.netflix.discovery.DiscoveryClient","rest":"DiscoveryClient_TRACE-CONSUMER/hello-world:trace-consumer:8070 - registration status: 204"}
{"@timestamp":"2020-01-13T08:12:18.866Z","severity":"INFO","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"8360","thread":"main","class":"o.s.b.w.embedded.tomcat.TomcatWebServer","rest":"Tomcat started on port(s): 8070 (http) with context path ''"}
{"@timestamp":"2020-01-13T08:12:18.868Z","severity":"INFO","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"8360","thread":"main","class":"o.s.c.n.e.s.EurekaAutoServiceRegistration","rest":"Updating port to 8070"}
{"@timestamp":"2020-01-13T08:12:20.338Z","severity":"INFO","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"8360","thread":"main","class":"com.wenqy.trace.TraceConsumerApplication","rest":"Started TraceConsumerApplication in 39.838 seconds (JVM running for 40.555)"}
{"@timestamp":"2020-01-13T08:12:48.580Z","severity":"INFO","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"8360","thread":"DiscoveryClient-CacheRefreshExecutor-0","class":"com.netflix.discovery.DiscoveryClient","rest":"Disable delta property : false"}
{"@timestamp":"2020-01-13T08:12:48.581Z","severity":"INFO","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"8360","thread":"DiscoveryClient-CacheRefreshExecutor-0","class":"com.netflix.discovery.DiscoveryClient","rest":"Single vip registry refresh property : null"}
{"@timestamp":"2020-01-13T08:12:48.581Z","severity":"INFO","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"8360","thread":"DiscoveryClient-CacheRefreshExecutor-0","class":"com.netflix.discovery.DiscoveryClient","rest":"Force full registry fetch : false"}
{"@timestamp":"2020-01-13T08:12:48.581Z","severity":"INFO","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"8360","thread":"DiscoveryClient-CacheRefreshExecutor-0","class":"com.netflix.discovery.DiscoveryClient","rest":"Application is null : false"}
{"@timestamp":"2020-01-13T08:12:48.581Z","severity":"INFO","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"8360","thread":"DiscoveryClient-CacheRefreshExecutor-0","class":"com.netflix.discovery.DiscoveryClient","rest":"Registered Applications size is zero : true"}
{"@timestamp":"2020-01-13T08:12:48.581Z","severity":"INFO","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"8360","thread":"DiscoveryClient-CacheRefreshExecutor-0","class":"com.netflix.discovery.DiscoveryClient","rest":"Application version is -1: false"}
{"@timestamp":"2020-01-13T08:12:48.581Z","severity":"INFO","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"8360","thread":"DiscoveryClient-CacheRefreshExecutor-0","class":"com.netflix.discovery.DiscoveryClient","rest":"Getting all instance registry info from the eureka server"}
{"@timestamp":"2020-01-13T08:12:48.663Z","severity":"INFO","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"8360","thread":"DiscoveryClient-CacheRefreshExecutor-0","class":"com.netflix.discovery.DiscoveryClient","rest":"The response status is 200"}
{"@timestamp":"2020-01-13T08:13:23.131Z","severity":"INFO","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"8360","thread":"http-nio-8070-exec-2","class":"o.a.c.c.C.[Tomcat].[localhost].[/]","rest":"Initializing Spring DispatcherServlet 'dispatcherServlet'"}
{"@timestamp":"2020-01-13T08:13:23.132Z","severity":"INFO","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"8360","thread":"http-nio-8070-exec-2","class":"o.s.web.servlet.DispatcherServlet","rest":"Initializing Servlet 'dispatcherServlet'"}
{"@timestamp":"2020-01-13T08:13:23.154Z","severity":"INFO","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"8360","thread":"http-nio-8070-exec-2","class":"o.s.web.servlet.DispatcherServlet","rest":"Completed initialization in 22 ms"}
{"@timestamp":"2020-01-13T08:13:23.206Z","severity":"INFO","service":"trace-consumer","trace":"8cb8956794f54ba0","span":"8cb8956794f54ba0","exportable":"false","pid":"8360","thread":"http-nio-8070-exec-2","class":"c.w.t.controller.TraceConsumerController","rest":"===call trace-1==="}
{"@timestamp":"2020-01-13T08:13:23.925Z","severity":"INFO","service":"trace-consumer","trace":"8cb8956794f54ba0","span":"47f827bc39a9961f","exportable":"false","pid":"8360","thread":"http-nio-8070-exec-2","class":"c.netflix.config.ChainedDynamicProperty","rest":"Flipping property: trace-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647"}
{"@timestamp":"2020-01-13T08:13:24.015Z","severity":"INFO","service":"trace-consumer","trace":"8cb8956794f54ba0","span":"47f827bc39a9961f","exportable":"false","pid":"8360","thread":"http-nio-8070-exec-2","class":"c.n.util.concurrent.ShutdownEnabledTimer","rest":"Shutdown hook installed for: NFLoadBalancer-PingTimer-trace-provider"}
{"@timestamp":"2020-01-13T08:13:24.015Z","severity":"INFO","service":"trace-consumer","trace":"8cb8956794f54ba0","span":"47f827bc39a9961f","exportable":"false","pid":"8360","thread":"http-nio-8070-exec-2","class":"c.netflix.loadbalancer.BaseLoadBalancer","rest":"Client: trace-provider instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trace-provider,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null"}
{"@timestamp":"2020-01-13T08:13:24.032Z","severity":"INFO","service":"trace-consumer","trace":"8cb8956794f54ba0","span":"47f827bc39a9961f","exportable":"false","pid":"8360","thread":"http-nio-8070-exec-2","class":"c.n.l.DynamicServerListLoadBalancer","rest":"Using serverListUpdater PollingServerListUpdater"}
{"@timestamp":"2020-01-13T08:13:24.067Z","severity":"INFO","service":"trace-consumer","trace":"8cb8956794f54ba0","span":"47f827bc39a9961f","exportable":"false","pid":"8360","thread":"http-nio-8070-exec-2","class":"c.netflix.config.ChainedDynamicProperty","rest":"Flipping property: trace-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647"}
{"@timestamp":"2020-01-13T08:13:24.069Z","severity":"INFO","service":"trace-consumer","trace":"8cb8956794f54ba0","span":"47f827bc39a9961f","exportable":"false","pid":"8360","thread":"http-nio-8070-exec-2","class":"c.n.l.DynamicServerListLoadBalancer","rest":"DynamicServerListLoadBalancer for client trace-provider initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trace-provider,current list of Servers=[10.188.190.60:8071],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;\tInstance count:1;\tActive connections count: 0;\tCircuit breaker tripped count: 0;\tActive connections per server: 0.0;]\n},Server stats: [[Server:10.188.190.60:8071;\tZone:defaultZone;\tTotal Requests:0;\tSuccessive connection failure:0;\tTotal blackout seconds:0;\tLast connection made:Thu Jan 01 08:00:00 CST 1970;\tFirst connection made: Thu Jan 01 08:00:00 CST 1970;\tActive Connections:0;\ttotal failure count in last (1000) msecs:0;\taverage resp time:0.0;\t90 percentile resp time:0.0;\t95 percentile resp time:0.0;\tmin resp time:0.0;\tmax resp time:0.0;\tstddev resp time:0.0]\n]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@39396626"}
{"@timestamp":"2020-01-13T08:13:25.037Z","severity":"INFO","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"8360","thread":"PollingServerListUpdater-0","class":"c.netflix.config.ChainedDynamicProperty","rest":"Flipping property: trace-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647"}
{"@timestamp":"2020-01-13T08:17:18.412Z","severity":"INFO","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"8360","thread":"AsyncResolver-bootstrap-executor-0","class":"c.n.d.s.r.aws.ConfigClusterResolver","rest":"Resolving eureka endpoints via configuration"}
{"@timestamp":"2020-01-13T08:20:10.294Z","severity":"INFO","service":"trace-consumer","trace":"faa66432b5af734e","span":"faa66432b5af734e","exportable":"false","pid":"8360","thread":"http-nio-8070-exec-6","class":"c.w.t.controller.TraceConsumerController","rest":"===call trace-1==="}
{"@timestamp":"2020-01-13T08:22:18.417Z","severity":"INFO","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"8360","thread":"AsyncResolver-bootstrap-executor-0","class":"c.n.d.s.r.aws.ConfigClusterResolver","rest":"Resolving eureka endpoints via configuration"}
{"@timestamp":"2020-01-13T08:27:18.421Z","severity":"INFO","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"8360","thread":"AsyncResolver-bootstrap-executor-0","class":"c.n.d.s.r.aws.ConfigClusterResolver","rest":"Resolving eureka endpoints via configuration"}
{"@timestamp":"2020-01-13T08:32:18.426Z","severity":"INFO","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"8360","thread":"AsyncResolver-bootstrap-executor-0","class":"c.n.d.s.r.aws.ConfigClusterResolver","rest":"Resolving eureka endpoints via configuration"}
{"@timestamp":"2020-01-13T08:37:18.430Z","severity":"INFO","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"8360","thread":"AsyncResolver-bootstrap-executor-0","class":"c.n.d.s.r.aws.ConfigClusterResolver","rest":"Resolving eureka endpoints via configuration"}
{"@timestamp":"2020-01-13T08:42:18.434Z","severity":"INFO","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"8360","thread":"AsyncResolver-bootstrap-executor-0","class":"c.n.d.s.r.aws.ConfigClusterResolver","rest":"Resolving eureka endpoints via configuration"}
{"@timestamp":"2020-01-13T09:19:32.772Z","severity":"INFO","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"18112","thread":"main","class":"o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","rest":"Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"}
{"@timestamp":"2020-01-13T09:19:34.342Z","severity":"INFO","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"18112","thread":"main","class":"com.wenqy.trace.TraceConsumerApplication","rest":"No active profile set, falling back to default profiles: default"}
{"@timestamp":"2020-01-13T09:19:35.170Z","severity":"WARN","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"18112","thread":"main","class":"o.s.boot.actuate.endpoint.EndpointId","rest":"Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format."}
{"@timestamp":"2020-01-13T09:19:35.476Z","severity":"INFO","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"18112","thread":"main","class":"o.s.cloud.context.scope.GenericScope","rest":"BeanFactory id=fa87c7fa-4bf8-3c9c-bb32-13a0d82acba1"}
{"@timestamp":"2020-01-13T09:19:36.018Z","severity":"INFO","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"18112","thread":"main","class":"o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","rest":"Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"}
{"@timestamp":"2020-01-13T09:19:37.501Z","severity":"INFO","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"18112","thread":"main","class":"o.s.b.w.embedded.tomcat.TomcatWebServer","rest":"Tomcat initialized with port(s): 8070 (http)"}
{"@timestamp":"2020-01-13T09:19:37.513Z","severity":"INFO","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"18112","thread":"main","class":"org.apache.catalina.core.StandardService","rest":"Starting service [Tomcat]"}
{"@timestamp":"2020-01-13T09:19:37.514Z","severity":"INFO","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"18112","thread":"main","class":"org.apache.catalina.core.StandardEngine","rest":"Starting Servlet engine: [Apache Tomcat/9.0.29]"}
{"@timestamp":"2020-01-13T09:19:37.708Z","severity":"INFO","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"18112","thread":"main","class":"o.a.c.c.C.[Tomcat].[localhost].[/]","rest":"Initializing Spring embedded WebApplicationContext"}
{"@timestamp":"2020-01-13T09:19:37.708Z","severity":"INFO","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"18112","thread":"main","class":"o.s.web.context.ContextLoader","rest":"Root WebApplicationContext: initialization completed in 3351 ms"}
{"@timestamp":"2020-01-13T09:19:37.936Z","severity":"WARN","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"18112","thread":"main","class":"c.n.c.sources.URLConfigurationSource","rest":"No URLs will be polled as dynamic configuration sources."}
{"@timestamp":"2020-01-13T09:19:37.937Z","severity":"INFO","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"18112","thread":"main","class":"c.n.c.sources.URLConfigurationSource","rest":"To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath."}
{"@timestamp":"2020-01-13T09:19:37.960Z","severity":"INFO","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"18112","thread":"main","class":"c.netflix.config.DynamicPropertyFactory","rest":"DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@45b7c97f"}
{"@timestamp":"2020-01-13T09:19:41.020Z","severity":"WARN","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"18112","thread":"main","class":"o.s.c.s.zipkin2.ZipkinAutoConfiguration","rest":"Check result of the [AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@31940704}] contains an error [CheckResult{ok=false, error=org.springframework.web.client.ResourceAccessException: I/O error on POST request for \"http://127.0.0.1:9411/api/v2/spans\": connect timed out; nested exception is java.net.SocketTimeoutException: connect timed out}]"}
{"@timestamp":"2020-01-13T09:19:42.186Z","severity":"WARN","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"18112","thread":"main","class":"c.n.c.sources.URLConfigurationSource","rest":"No URLs will be polled as dynamic configuration sources."}
{"@timestamp":"2020-01-13T09:19:42.187Z","severity":"INFO","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"18112","thread":"main","class":"c.n.c.sources.URLConfigurationSource","rest":"To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath."}
{"@timestamp":"2020-01-13T11:07:28.773Z","severity":"INFO","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"14556","thread":"main","class":"o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","rest":"Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"}
{"@timestamp":"2020-01-13T11:07:30.380Z","severity":"INFO","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"14556","thread":"main","class":"com.wenqy.trace.TraceConsumerApplication","rest":"No active profile set, falling back to default profiles: default"}
{"@timestamp":"2020-01-13T11:07:31.326Z","severity":"WARN","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"14556","thread":"main","class":"o.s.boot.actuate.endpoint.EndpointId","rest":"Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format."}
{"@timestamp":"2020-01-13T11:07:31.814Z","severity":"INFO","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"14556","thread":"main","class":"o.s.cloud.context.scope.GenericScope","rest":"BeanFactory id=fa87c7fa-4bf8-3c9c-bb32-13a0d82acba1"}
{"@timestamp":"2020-01-13T11:07:32.479Z","severity":"INFO","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"14556","thread":"main","class":"o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","rest":"Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)"}
{"@timestamp":"2020-01-13T11:07:34.422Z","severity":"INFO","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"14556","thread":"main","class":"o.s.b.w.embedded.tomcat.TomcatWebServer","rest":"Tomcat initialized with port(s): 8070 (http)"}
{"@timestamp":"2020-01-13T11:07:34.454Z","severity":"INFO","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"14556","thread":"main","class":"org.apache.catalina.core.StandardService","rest":"Starting service [Tomcat]"}
{"@timestamp":"2020-01-13T11:07:34.455Z","severity":"INFO","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"14556","thread":"main","class":"org.apache.catalina.core.StandardEngine","rest":"Starting Servlet engine: [Apache Tomcat/9.0.29]"}
{"@timestamp":"2020-01-13T11:07:34.745Z","severity":"INFO","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"14556","thread":"main","class":"o.a.c.c.C.[Tomcat].[localhost].[/]","rest":"Initializing Spring embedded WebApplicationContext"}
{"@timestamp":"2020-01-13T11:07:34.745Z","severity":"INFO","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"14556","thread":"main","class":"o.s.web.context.ContextLoader","rest":"Root WebApplicationContext: initialization completed in 4345 ms"}
{"@timestamp":"2020-01-13T11:07:34.974Z","severity":"WARN","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"14556","thread":"main","class":"c.n.c.sources.URLConfigurationSource","rest":"No URLs will be polled as dynamic configuration sources."}
{"@timestamp":"2020-01-13T11:07:34.975Z","severity":"INFO","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"14556","thread":"main","class":"c.n.c.sources.URLConfigurationSource","rest":"To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath."}
{"@timestamp":"2020-01-13T11:07:34.999Z","severity":"INFO","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"14556","thread":"main","class":"c.netflix.config.DynamicPropertyFactory","rest":"DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@59d6642a"}
{"@timestamp":"2020-01-13T11:07:38.489Z","severity":"WARN","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"14556","thread":"main","class":"c.n.c.sources.URLConfigurationSource","rest":"No URLs will be polled as dynamic configuration sources."}
{"@timestamp":"2020-01-13T11:07:38.490Z","severity":"INFO","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"14556","thread":"main","class":"c.n.c.sources.URLConfigurationSource","rest":"To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath."}
{"@timestamp":"2020-01-13T11:07:39.025Z","severity":"INFO","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"14556","thread":"main","class":"o.s.s.concurrent.ThreadPoolTaskExecutor","rest":"Initializing ExecutorService 'applicationTaskExecutor'"}
{"@timestamp":"2020-01-13T11:07:42.427Z","severity":"WARN","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"14556","thread":"main","class":"o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger","rest":"You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project."}
{"@timestamp":"2020-01-13T11:07:44.091Z","severity":"WARN","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"14556","thread":"main","class":"o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger","rest":"Spring Cloud LoadBalancer is currently working with default default cache. You can switch to using Caffeine cache, by adding it to the classpath."}
{"@timestamp":"2020-01-13T11:07:44.193Z","severity":"WARN","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"14556","thread":"main","class":"o.s.c.s.e.EurekaStarterDeprecationWarningAutoConfiguration","rest":"spring-cloud-starter-eureka is deprecated as of Spring Cloud Netflix 1.4.0, please migrate to spring-cloud-starter-netflix-eureka"}
{"@timestamp":"2020-01-13T11:07:44.204Z","severity":"INFO","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"14556","thread":"main","class":"o.s.b.a.e.web.EndpointLinksResolver","rest":"Exposing 2 endpoint(s) beneath base path '/actuator'"}
{"@timestamp":"2020-01-13T11:07:44.267Z","severity":"INFO","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"14556","thread":"main","class":"o.s.c.netflix.eureka.InstanceInfoFactory","rest":"Setting initial instance status as: STARTING"}
{"@timestamp":"2020-01-13T11:07:44.359Z","severity":"INFO","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"14556","thread":"main","class":"com.netflix.discovery.DiscoveryClient","rest":"Initializing Eureka in region us-east-1"}
{"@timestamp":"2020-01-13T11:07:44.554Z","severity":"INFO","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"14556","thread":"main","class":"c.n.d.provider.DiscoveryJerseyProvider","rest":"Using JSON encoding codec LegacyJacksonJson"}
{"@timestamp":"2020-01-13T11:07:44.554Z","severity":"INFO","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"14556","thread":"main","class":"c.n.d.provider.DiscoveryJerseyProvider","rest":"Using JSON decoding codec LegacyJacksonJson"}
{"@timestamp":"2020-01-13T11:07:44.743Z","severity":"INFO","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"14556","thread":"main","class":"c.n.d.provider.DiscoveryJerseyProvider","rest":"Using XML encoding codec XStreamXml"}
{"@timestamp":"2020-01-13T11:07:44.743Z","severity":"INFO","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"14556","thread":"main","class":"c.n.d.provider.DiscoveryJerseyProvider","rest":"Using XML decoding codec XStreamXml"}
{"@timestamp":"2020-01-13T11:07:45.035Z","severity":"INFO","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"14556","thread":"main","class":"c.n.d.s.r.aws.ConfigClusterResolver","rest":"Resolving eureka endpoints via configuration"}
{"@timestamp":"2020-01-13T11:07:46.110Z","severity":"INFO","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"14556","thread":"main","class":"com.netflix.discovery.DiscoveryClient","rest":"Disable delta property : false"}
{"@timestamp":"2020-01-13T11:07:46.110Z","severity":"INFO","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"14556","thread":"main","class":"com.netflix.discovery.DiscoveryClient","rest":"Single vip registry refresh property : null"}
{"@timestamp":"2020-01-13T11:07:46.110Z","severity":"INFO","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"14556","thread":"main","class":"com.netflix.discovery.DiscoveryClient","rest":"Force full registry fetch : false"}
{"@timestamp":"2020-01-13T11:07:46.110Z","severity":"INFO","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"14556","thread":"main","class":"com.netflix.discovery.DiscoveryClient","rest":"Application is null : false"}
{"@timestamp":"2020-01-13T11:07:46.110Z","severity":"INFO","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"14556","thread":"main","class":"com.netflix.discovery.DiscoveryClient","rest":"Registered Applications size is zero : true"}
{"@timestamp":"2020-01-13T11:07:46.110Z","severity":"INFO","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"14556","thread":"main","class":"com.netflix.discovery.DiscoveryClient","rest":"Application version is -1: true"}
{"@timestamp":"2020-01-13T11:07:46.111Z","severity":"INFO","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"14556","thread":"main","class":"com.netflix.discovery.DiscoveryClient","rest":"Getting all instance registry info from the eureka server"}
{"@timestamp":"2020-01-13T11:07:46.292Z","severity":"INFO","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"14556","thread":"main","class":"com.netflix.discovery.DiscoveryClient","rest":"The response status is 200"}
{"@timestamp":"2020-01-13T11:07:46.295Z","severity":"INFO","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"14556","thread":"main","class":"com.netflix.discovery.DiscoveryClient","rest":"Starting heartbeat executor: renew interval is: 10"}
{"@timestamp":"2020-01-13T11:07:46.298Z","severity":"INFO","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"14556","thread":"main","class":"c.n.discovery.InstanceInfoReplicator","rest":"InstanceInfoReplicator onDemand update allowed rate per min is 4"}
{"@timestamp":"2020-01-13T11:07:46.303Z","severity":"INFO","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"14556","thread":"main","class":"com.netflix.discovery.DiscoveryClient","rest":"Discovery Client initialized at timestamp 1578913666301 with initial instances count: 1"}
{"@timestamp":"2020-01-13T11:07:46.313Z","severity":"INFO","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"14556","thread":"main","class":"o.s.c.n.e.s.EurekaServiceRegistry","rest":"Registering application TRACE-CONSUMER with eureka with status UP"}
{"@timestamp":"2020-01-13T11:07:46.315Z","severity":"INFO","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"14556","thread":"main","class":"com.netflix.discovery.DiscoveryClient","rest":"Saw local status change event StatusChangeEvent [timestamp=1578913666315, current=UP, previous=STARTING]"}
{"@timestamp":"2020-01-13T11:07:46.317Z","severity":"WARN","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"14556","thread":"main","class":"c.n.discovery.InstanceInfoReplicator","rest":"Ignoring onDemand update due to rate limiter"}
{"@timestamp":"2020-01-13T11:07:46.323Z","severity":"INFO","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"14556","thread":"DiscoveryClient-InstanceInfoReplicator-0","class":"com.netflix.discovery.DiscoveryClient","rest":"DiscoveryClient_TRACE-CONSUMER/hello-world:trace-consumer:8070: registering service..."}
{"@timestamp":"2020-01-13T11:07:46.472Z","severity":"INFO","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"14556","thread":"DiscoveryClient-InstanceInfoReplicator-0","class":"com.netflix.discovery.DiscoveryClient","rest":"DiscoveryClient_TRACE-CONSUMER/hello-world:trace-consumer:8070 - registration status: 204"}
{"@timestamp":"2020-01-13T11:07:46.528Z","severity":"INFO","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"14556","thread":"main","class":"o.s.b.w.embedded.tomcat.TomcatWebServer","rest":"Tomcat started on port(s): 8070 (http) with context path ''"}
{"@timestamp":"2020-01-13T11:07:46.530Z","severity":"INFO","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"14556","thread":"main","class":"o.s.c.n.e.s.EurekaAutoServiceRegistration","rest":"Updating port to 8070"}
{"@timestamp":"2020-01-13T11:07:48.058Z","severity":"INFO","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"14556","thread":"main","class":"com.wenqy.trace.TraceConsumerApplication","rest":"Started TraceConsumerApplication in 22.704 seconds (JVM running for 25.619)"}
{"@timestamp":"2020-01-13T11:08:12.824Z","severity":"INFO","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"14556","thread":"http-nio-8070-exec-2","class":"o.a.c.c.C.[Tomcat].[localhost].[/]","rest":"Initializing Spring DispatcherServlet 'dispatcherServlet'"}
{"@timestamp":"2020-01-13T11:08:12.825Z","severity":"INFO","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"14556","thread":"http-nio-8070-exec-2","class":"o.s.web.servlet.DispatcherServlet","rest":"Initializing Servlet 'dispatcherServlet'"}
{"@timestamp":"2020-01-13T11:08:12.849Z","severity":"INFO","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"14556","thread":"http-nio-8070-exec-2","class":"o.s.web.servlet.DispatcherServlet","rest":"Completed initialization in 24 ms"}
{"@timestamp":"2020-01-13T11:08:13.041Z","severity":"INFO","service":"trace-consumer","trace":"5e24dff40933ae31","span":"5e24dff40933ae31","exportable":"true","pid":"14556","thread":"http-nio-8070-exec-2","class":"c.w.t.controller.TraceConsumerController","rest":"===call trace-1==="}
{"@timestamp":"2020-01-13T11:08:14.093Z","severity":"INFO","service":"trace-consumer","trace":"5e24dff40933ae31","span":"a070929835fa5f2d","exportable":"true","pid":"14556","thread":"http-nio-8070-exec-2","class":"c.netflix.config.ChainedDynamicProperty","rest":"Flipping property: trace-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647"}
{"@timestamp":"2020-01-13T11:08:14.202Z","severity":"INFO","service":"trace-consumer","trace":"5e24dff40933ae31","span":"a070929835fa5f2d","exportable":"true","pid":"14556","thread":"http-nio-8070-exec-2","class":"c.n.util.concurrent.ShutdownEnabledTimer","rest":"Shutdown hook installed for: NFLoadBalancer-PingTimer-trace-provider"}
{"@timestamp":"2020-01-13T11:08:14.202Z","severity":"INFO","service":"trace-consumer","trace":"5e24dff40933ae31","span":"a070929835fa5f2d","exportable":"true","pid":"14556","thread":"http-nio-8070-exec-2","class":"c.netflix.loadbalancer.BaseLoadBalancer","rest":"Client: trace-provider instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trace-provider,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null"}
{"@timestamp":"2020-01-13T11:08:14.226Z","severity":"INFO","service":"trace-consumer","trace":"5e24dff40933ae31","span":"a070929835fa5f2d","exportable":"true","pid":"14556","thread":"http-nio-8070-exec-2","class":"c.n.l.DynamicServerListLoadBalancer","rest":"Using serverListUpdater PollingServerListUpdater"}
{"@timestamp":"2020-01-13T11:08:14.273Z","severity":"INFO","service":"trace-consumer","trace":"5e24dff40933ae31","span":"a070929835fa5f2d","exportable":"true","pid":"14556","thread":"http-nio-8070-exec-2","class":"c.netflix.config.ChainedDynamicProperty","rest":"Flipping property: trace-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647"}
{"@timestamp":"2020-01-13T11:08:14.276Z","severity":"INFO","service":"trace-consumer","trace":"5e24dff40933ae31","span":"a070929835fa5f2d","exportable":"true","pid":"14556","thread":"http-nio-8070-exec-2","class":"c.n.l.DynamicServerListLoadBalancer","rest":"DynamicServerListLoadBalancer for client trace-provider initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=trace-provider,current list of Servers=[10.188.190.60:8071],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;\tInstance count:1;\tActive connections count: 0;\tCircuit breaker tripped count: 0;\tActive connections per server: 0.0;]\n},Server stats: [[Server:10.188.190.60:8071;\tZone:defaultZone;\tTotal Requests:0;\tSuccessive connection failure:0;\tTotal blackout seconds:0;\tLast connection made:Thu Jan 01 08:00:00 CST 1970;\tFirst connection made: Thu Jan 01 08:00:00 CST 1970;\tActive Connections:0;\ttotal failure count in last (1000) msecs:0;\taverage resp time:0.0;\t90 percentile resp time:0.0;\t95 percentile resp time:0.0;\tmin resp time:0.0;\tmax resp time:0.0;\tstddev resp time:0.0]\n]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@1efd7fd"}
{"@timestamp":"2020-01-13T11:08:15.231Z","severity":"INFO","service":"trace-consumer","trace":"","span":"","exportable":"","pid":"14556","thread":"PollingServerListUpdater-0","class":"c.netflix.config.ChainedDynamicProperty","rest":"Flipping property: trace-provider.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647"}
